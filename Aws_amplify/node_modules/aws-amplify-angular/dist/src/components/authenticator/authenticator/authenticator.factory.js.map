{"version":3,"file":"authenticator.factory.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/authenticator/authenticator.factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,SAAS,EACT,wBAAwB,EAEzB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,cAAc,EAAE,MAAW,uBAAuB,CAAC;AAE5D,OAAO,EAAE,2BAA2B,EAAE,MAAM,iCAAiC,CAAC;AAC9E,OAAO,EAAE,0BAA0B,EAAE,MAAM,gCAAgC,CAAC;;IAiB1E,gCAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;oBAL5C,EAAE;kCAEU,UAAU;KAG2B;IAE3E,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,4CAAW,GAAX,eAAgB;IAEhB,8CAAa,GAAb;QAEE,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,CAAC;YAChF,IAAI,cAAc,CAChB,2BAA2B,EAC3B;gBACE,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;aAC5C,CAAC;YACF,CAAC;gBACH,IAAI,cAAc,CAChB,0BAA0B,EAAE;oBAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;iBAC5C,CAAC,CAAC;QAEP,IAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB;aACrD,uBAAuB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAElD,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC7D,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC5D,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;KAC9D;;gBAjDF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,mJAIC;iBACZ;;;;gBAjBC,wBAAwB;;;8BAmBvB,KAAK;yBACL,KAAK;iCACL,KAAK;uCACL,KAAK;kCACL,SAAS,SAAC,yBAAyB;;iCA3CtC;;SAsCa,sBAAsB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ComponentFactoryResolver,\n  OnDestroy \n} from '@angular/core';\n\nimport { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';\nimport { ComponentMount }      from '../../component.mount';\nimport { AuthClass } from './authenticator.class';\nimport { AuthenticatorIonicComponent } from './authenticator.component.ionic';\nimport { AuthenticatorComponentCore } from './authenticator.component.core';\n\n@Component({\n  selector: 'amplify-authenticator',\n  template: `\n              <div class=\"amplify-component\">\n                <ng-template component-host></ng-template>\n              </div>\n            `\n})\nexport class AuthenticatorComponent implements OnInit, OnDestroy {\n  @Input() framework: string;\n  @Input() hide: string[] = [];\n  @Input() signUpConfig: any;\n  @Input() usernameAttributes: string = 'username';\n  @ViewChild(DynamicComponentDirective) componentHost: DynamicComponentDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnDestroy() {}\n\n  loadComponent() {\n\n    const authComponent = this.framework && this.framework.toLowerCase() === 'ionic' ? \n      new ComponentMount(\n        AuthenticatorIonicComponent,\n        {\n          hide: this.hide, \n          signUpConfig: this.signUpConfig,\n          usernameAttributes: this.usernameAttributes\n        }) \n        : \n      new ComponentMount(\n        AuthenticatorComponentCore, {\n          hide: this.hide, \n          signUpConfig: this.signUpConfig,\n          usernameAttributes: this.usernameAttributes\n        });\n\n    const componentFactory = this.componentFactoryResolver\n    .resolveComponentFactory(authComponent.component);\n\n    const viewContainerRef = this.componentHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<AuthClass>componentRef.instance).data = authComponent.data;\n  }\n}\n"]}