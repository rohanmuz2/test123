{"version":3,"file":"phone-field.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/phone-field-component/phone-field.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAW,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACxF,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,OAAO,EAAE,WAAW,EAAW,MAAO,2BAA2B,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AAE5D,IAAM,QAAQ,GAAG,mjBAcQ,IAAI,CAAC,YAAY,CAAC,cAAc,uoBAgB5B,IAAI,CAAC,YAAY,CAAC,gBAAgB,6DAK9D,CAAC;;IAcE,iCAA2C;QAAA,mBAAc,GAAd,cAAc;4BAPjC,EAAE;sBACT,cAAc;yBACV,IAAI;6BACD,GAAG;mCACG,EAAE;iCAoCiB,IAAI,YAAY,EAAoB;QAhCjF,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;KACjC;0BAGG,yCAAI;uBAAC,IAAS;YACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC;YAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,aAAa,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;0BAI7E,gDAAW;uBAAC,WAAmB;YAC/B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;;;;0BAIhC,0CAAK;uBAAC,KAAa;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;0BAIpB,6CAAQ;uBAAC,QAAiB;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;;;;0BAI1B,uDAAkB;uBAAC,kBAA0B;YAC7C,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC;;;;;IAM5C,0CAAQ,GAAR,eAAa;IAEb,6CAAW,GAAX,eAAgB;IAEhB,gDAAc,GAAd,UAAe,YAAoB;QAC/B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;SAC/C,CAAC,CAAC;KACN;IAED,qDAAmB,GAAnB,UAAoB,kBAA0B;QAC1C,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;SAC/C,CAAC,CAAC;KACN;IAED,gDAAc,GAAd;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,yBAAyB,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;KACzF;;gBArEJ,SAAS,SAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,QAAQ,UAAA;iBACT;;;;gBA7CQ,cAAc,uBAsDN,MAAM,SAAC,cAAc;;;yBAIjC,KAAK;gCAQL,KAAK;0BAKL,KAAK;6BAKL,KAAK;uCAKL,KAAK;sCAKL,MAAM;;kCAtGX;;SA8Da,uBAAuB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, \tEventEmitter, Inject, Output } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { PhoneFieldOutput } from '../types';\nimport { countrylist, country }  from '../../../assets/countries';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div>\n    <label class=\"amplify-input-label\" for=\"localPhoneNumberField\">\n        {{ this.amplifyService.i18n().get(this._label) }}\n        <span *ngIf=\"_required\">*</span>\n    </label>\n    <div class=\"amplify-input-group\">\n        <div class=\"amplify-input-group-item\">\n            <select \n            #countryCodeField\n            name=\"countryCode\"\n            class=\"amplify-select-phone-country\"\n            [(ngModel)]=\"_country_code\"\n            (change)=\"setCountryCode($event.target.value)\"\n            data-test=\"${auth.genericAttrs.dialCodeSelect}\"\n            >\n            <option *ngFor=\"let country of _countries\"\n                value={{country.value}}>\n                {{country.label}}\n            </option>\n            </select>\n        </div>\n        <div class=\"amplify-input-group-item\">\n            <input\n                #localPhoneNumberField\n                class=\"amplify-form-input\"\n                placeholder=\"{{ this.amplifyService.i18n().get(this.getPlaceholder()) }}\"\n                name=\"local_phone_number\"\n                type=\"text\"\n                (keyup)=\"setLocalPhoneNumber($event.target.value)\"\n                data-test=\"${auth.genericAttrs.phoneNumberInput}\"\n            />\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-phone-field-core',\n  template,\n})\nexport class PhoneFieldComponentCore implements OnInit {\n    _placeholder : string = '';\n    _label: string = 'Phone Number';\n    _required: boolean = true;\n    _country_code: string = '1';\n    _local_phone_number: string = '';\n    _countries: country[];\n\n    constructor(@Inject(AmplifyService) public amplifyService: AmplifyService) {\n        this._countries = countrylist;\n    }\n\n    @Input()\n    set data(data: any) {\n        this._placeholder = data.placeholder || this._placeholder;\n        this._label = data.label || this._label;\n        this._country_code = data.defaultCountryCode || this._country_code;\n        this._required = data.required === undefined? this._required : data.required;\n    }\n\n    @Input()\n    set placeholder(placeholder: string) {\n        this._placeholder = placeholder;\n    }\n\n    @Input()\n    set label(label: string) {\n        this._label = label;\n    }\n\n    @Input()\n    set required(required: boolean) {\n        this._required = required;\n    }\n\n    @Input()\n    set defaultCountryCode(defaultCountryCode: string) {\n        this._country_code = defaultCountryCode;\n    }\n\n    @Output()\n\tphoneFieldChanged: EventEmitter<PhoneFieldOutput> = new EventEmitter<PhoneFieldOutput>();\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n\n    setCountryCode(country_code: string) {\n        this._country_code = country_code;\n        this.phoneFieldChanged.emit({\n            country_code: this._country_code,\n            local_phone_number: this._local_phone_number\n        });\n    }\n\n    setLocalPhoneNumber(local_phone_number: string) {\n        this._local_phone_number = local_phone_number;\n        this.phoneFieldChanged.emit({\n            country_code: this._country_code,\n            local_phone_number: this._local_phone_number\n        });\n    }\n\n    getPlaceholder() {\n        return this.amplifyService.i18n().get(`Enter your phone number` || this._placeholder);\n    }\n}\n"]}