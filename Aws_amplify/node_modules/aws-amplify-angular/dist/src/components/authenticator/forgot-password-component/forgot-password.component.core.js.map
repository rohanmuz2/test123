{"version":3,"file":"forgot-password.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/forgot-password-component/forgot-password.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\nimport { UsernameAttributes, UsernameFieldOutput } from '../types';\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { labelMap, composePhoneNumber } from '../common';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"${auth.forgotPassword.section}\">\n    <div class=\"amplify-form-body\" data-test=\"${auth.forgotPassword.bodySection}\">\n    <div class=\"amplify-form-header\" data-test=\"${auth.forgotPassword.headerSection}\">\n      {{ this.amplifyService.i18n().get('Reset your password') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"!code_sent\">\n      {{ this.amplifyService.i18n().get('You will receive a verification code') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"code_sent\">\n      {{ this.amplifyService.i18n().get('Enter the code you received and set a new password') }}\n    </div>\n    <amplify-auth-username-field-core\n      *ngIf=\"!code_sent\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      (usernameFieldChanged)=\"onUsernameFieldChanged($event)\"\n    ></amplify-auth-username-field-core>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (keyup)=\"setCode(code.value)\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter code') }}\"\n        data-test=\"${auth.forgotPassword.codeInput}\"\n      />\n      </div>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"password\">\n        {{ this.amplifyService.i18n().get('New Password *') }}\n      </label>\n      <input #password\n        (keyup)=\"setPassword(password.value)\"\n        (keyup.enter)=\"onSubmit()\"\n        class=\"amplify-form-input\"\n        type=\"password\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n        data-test=\"${auth.forgotPassword.newPasswordInput}\"\n      />\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            *ngIf=\"!code_sent\"\n            (click)=\"onSend()\"\n            data-test=\"${auth.forgotPassword.sendCodeButton}\"\n            >\n              {{ this.amplifyService.i18n().get('Submit') }}</button>\n          <button class=\"amplify-form-button\"\n            *ngIf=\"code_sent\"\n            (click)=\"onSubmit()\"\n            data-test=\"${auth.forgotPassword.submitButton}\"\n            >\n              {{ this.amplifyService.i18n().get('Verify') }}</button>\n        </div>\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-actions-left\">\n            <a\n              *ngIf=\"code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSend()\"\n              data-test=\"${auth.forgotPassword.resendCodeLink}\"\n              >\n              {{ this.amplifyService.i18n().get('Resend Code') }}\n            </a>\n            <a\n              *ngIf=\"!code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSignIn()\"\n              data-test=\"${auth.forgotPassword.backToSignInLink}\"\n              >\n              {{ this.amplifyService.i18n().get('Back to Sign in') }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-forgot-password-core',\n  template\n})\nexport class ForgotPasswordComponentCore implements OnInit {\n  _authState: AuthState;\n  _show: boolean;\n  _usernameAttributes: string = 'username';\n  username: string;\n  code: string;\n  password: string;\n  errorMessage: string;\n  code_sent = false;\n  protected logger: any;\n  local_phone_number: string;\n  country_code: string = '1';\n  email: string;\n\n  constructor(@Inject(AmplifyService) protected amplifyService: AmplifyService) {\n    this.logger = this.amplifyService.logger('ForgotPasswordComponent');\n  }\n\n  @Input()\n  set data(data: any) {\n    this._authState = data.authState;\n    this._show = data.authState.state === 'forgotPassword';\n    this._usernameAttributes = data.usernameAttributes;\n    this.hide = data.hide ? data.hide : this.hide;\n\n    this.username = (data.authState.user &&\n       data.authState.user.username) ?\n       data.authState.user.username : '';\n  }\n\n  @Input() hide: string[] = [];\n\n  shouldHide(comp) {\n    return this.hide.filter(item => item === comp)\n            .length > 0;\n  }\n\n  @Input()\n  set authState(authState: AuthState) {\n    this._authState = authState;\n    this._show = authState.state === 'forgotPassword';\n\n    this.email = (authState.user && authState.user.email)? authState.user.email : '';\n    this.country_code = (authState.user && authState.user.contry_code) ? authState.user.country_code : '1';\n    this.local_phone_number = (authState.user && authState.user.local_phone_number) ? authState.user.local_phone_number : '';\n    this.username = (authState.user && authState.user.username) ? authState.user.username : '';\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.auth()){\n      throw new Error('Auth module not registered on AmplifyService provider');\n    }\n  }\n\n  @Input()\n  set usernameAttributes(usernameAttributes: string) {\n    this._usernameAttributes = usernameAttributes;\n  }\n\n  setCode(code: string) {\n    this.code = code;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  getforgotPwUsername() {\n    switch(this._usernameAttributes) {\n      case UsernameAttributes.EMAIL:\n        return this.email;\n      case UsernameAttributes.PHONE_NUMBER:\n        return composePhoneNumber(this.country_code, this.local_phone_number);\n      default:\n        return this.username;\n    }\n  }\n\n  onSend() {\n    let forgotPwUsername = this.getforgotPwUsername();\n    if (!forgotPwUsername) {\n      this.errorMessage = \"Username cannot be empty\";\n      return;\n    }\n    this.amplifyService.auth().forgotPassword(forgotPwUsername)\n      .then(() => {\n        this.code_sent = true;\n      })\n      .catch((err) => {\n        this._setError(err);\n        this.code_sent = false;\n      });\n  }\n\n  onSubmit() {\n    this.amplifyService.auth()\n      .forgotPasswordSubmit(\n        this.getforgotPwUsername(),\n        this.code,\n        this.password\n      )\n      .then(() => {\n        const user = { username: this.username };\n        this.onAlertClose();\n        this.amplifyService.setAuthState({ state: 'signIn', user });\n      })\n      .catch(err => this._setError(err));\n  }\n\n  onSignIn() {\n    this.onAlertClose();\n    this.amplifyService.setAuthState({ state: 'signIn', user: null });\n  }\n\n  onAlertClose() {\n    this._setError(null);\n  }\n\n  _setError(err) {\n    if (!err) {\n      this.errorMessage = null;\n      return;\n    }\n\n    this.errorMessage = err.message || err;\n  }\n  \n  getUsernameLabel() {\n    return labelMap[this._usernameAttributes as string] || this._usernameAttributes;\n  }\n\n  onUsernameFieldChanged(event: UsernameFieldOutput) {\n    this.email = event.email || this.email;\n    this.username = event.username || this.username;\n    this.country_code = event.country_code || this.country_code;\n    this.local_phone_number = event.local_phone_number || this.local_phone_number;\n  }\n}\n"]}