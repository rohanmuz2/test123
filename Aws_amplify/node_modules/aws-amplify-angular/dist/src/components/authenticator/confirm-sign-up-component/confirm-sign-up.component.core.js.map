{"version":3,"file":"confirm-sign-up.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/confirm-sign-up-component/confirm-sign-up.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { labelMap } from '../common';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"${auth.confirmSignUp.section}\">\n  <div class=\"amplify-form-body\" data-test=\"${auth.confirmSignUp.bodySection}\">\n    <div\n      class=\"amplify-form-header\"\n      data-test=\"${auth.confirmSignUp.headerSection}\"\n    >\n      {{ this.amplifyService.i18n().get('Confirm Sign up') }}</div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"amplifyUsername\">\n        {{ this.amplifyService.i18n().get(getUsernameLabel()) }}\n      </label>\n      <input\n        #amplifyUsername\n        class=\"amplify-form-input\"\n        type=\"text\"\n        disabled\n        placeholder=\"{{ this.amplifyService.i18n().get(getUsernameLabel()) }}\"\n        [value]=\"username\"\n        data-test=\"${auth.confirmSignUp.usernameInput}\"\n      />\n    </div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (change)=\"setCode(code.value)\"\n        (keyup)=\"setCode(code.value)\"\n        (keyup.enter)=\"onConfirm()\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter your Code') }}\"\n        data-test=\"${auth.confirmSignUp.confirmationCodeInput}\"\n      />\n      <span class=\"amplify-form-action\">{{ this.amplifyService.i18n().get('Lost your code?') }}\n        <a class=\"amplify-form-link\"\n            (click)=\"onResend()\"\n            data-test=\"${auth.confirmSignUp.resendCodeLink}\"\n          >{{ this.amplifyService.i18n().get('Resend Code') }}</a></span>\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <div class=\"amplify-form-actions-left\">\n          <a\n            class=\"amplify-form-link\"\n            (click)=\"onSignIn()\"\n            data-test=\"${auth.confirmSignUp.backToSignInLink}\"\n            >\n            {{ this.amplifyService.i18n().get('Back to Sign in') }}\n          </a>\n        </div>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button\n          class=\"amplify-form-button\"\n          (click)=\"onConfirm()\"\n          data-test=\"${auth.confirmSignUp.confirmButton}\"\n          >{{ this.amplifyService.i18n().get('Confirm') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n  <div class=\"amplify-alert-body\">\n    <span class=\"amplify-alert-icon\">&#9888;</span>\n    <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n    <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n  </div>\n</div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-confirm-sign-up-core',\n  template\n})\n\nexport class ConfirmSignUpComponentCore implements OnInit {\n  _authState: AuthState;\n  _show: boolean;\n  _usernameAttributes: string = 'username';\n  username: string;\n  code: string;\n  errorMessage: string;\n  protected logger: any;\n\n  constructor(@Inject(AmplifyService) protected amplifyService: AmplifyService) {\n    this.logger = this.amplifyService.logger('ConfirmSignUpComponent');\n  }\n\n  @Input()\n  set data(data: any) {\n    this.hide = data.hide ? data.hide : this.hide;\n    this._authState = data.authState;\n    this._show = data.authState.state === 'confirmSignUp';\n    this.username = data.authState.user? data.authState.user.username || '' : '';\n  }\n\n  @Input() hide: string[] = [];\n\n  @Input()\n  set authState(authState: AuthState) {\n    this._authState = authState;\n    this._show = authState.state === 'confirmSignUp';\n\n    this.username = authState.user? authState.user.username || '' : '';\n  }\n\n  @Input()\n  set usernameAttributes(usernameAttributes: string) {\n    this._usernameAttributes = usernameAttributes;\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.auth()){\n      throw new Error('Auth module not registered on AmplifyService provider');\n    }\n  }\n  shouldHide(comp) {\n    return this.hide.filter(item => item === comp)\n      .length > 0;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setCode(code: string) {\n    this.code = code;\n  }\n\n  onConfirm() {\n    this.amplifyService.auth()\n      .confirmSignUp(\n        this.username,\n        this.code\n      )\n      .then(() => this.logger.info('confirm success'))\n      .catch(err => this._setError(err));\n  }\n\n  onResend() {\n    this.amplifyService.auth().resendSignUp(this.username)\n      .then(() => this.logger.info('code resent'))\n      .catch(err => this._setError(err));\n  }\n\n  onSignIn() {\n    this.onAlertClose();\n    this.amplifyService.setAuthState({ state: 'signIn', user: null });\n  }\n\n  onAlertClose() {\n    this._setError(null);\n  }\n\n  _setError(err) {\n    if (!err) {\n      this.errorMessage = null;\n      return;\n    }\n\n    this.errorMessage = err.message || err;\n  }\n\n  getUsernameLabel() {\n    return labelMap[this._usernameAttributes as string] || this._usernameAttributes;\n  }\n}\n"]}