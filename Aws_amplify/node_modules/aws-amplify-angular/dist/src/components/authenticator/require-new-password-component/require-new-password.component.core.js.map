{"version":3,"file":"require-new-password.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/require-new-password-component/require-new-password.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"${auth.requireNewPassword.section}\">\n  <div class=\"amplify-form-body\" data-test=\"${auth.requireNewPassword.bodySection}\">\n  <div class=\"amplify-form-header\" data-test=\"${auth.requireNewPassword.headerSection}\">\n    {{ this.amplifyService.i18n().get('You are required to update your password') }}\n  </div>\n  <div class=\"amplify-form-row\">\n    <label class=\"amplify-input-label\" for=\"password\">\n      {{ this.amplifyService.i18n().get('Password *') }}\n    </label>\n    <input #password\n      (keyup)=\"setPassword(password.value)\"\n      (keyup.enter)=\"onSubmit()\"\n      class=\"amplify-form-input\"\n      type=\"password\"\n      placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n      data-test=\"${auth.requireNewPassword.newPasswordInput}\"\n    />\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <a class=\"amplify-form-link\"\n          (click)=\"onSignIn()\"\n          data-test=\"${auth.requireNewPassword.backToSignInLink}\"\n        >{{ this.amplifyService.i18n().get('Back to Sign In') }}</a>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button class=\"amplify-form-button\"\n          (click)=\"onSubmit()\"\n          data-test=\"${auth.requireNewPassword.submitButton}\"\n        >{{ this.amplifyService.i18n().get('Submit') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n<div class=\"amplify-alert-body\">\n  <span class=\"amplify-alert-icon\">&#9888;</span>\n  <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n  <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n</div>\n</div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-require-new-password-core',\n  template\n})\nexport class RequireNewPasswordComponentCore implements OnInit {\n  _authState: AuthState;\n  _show: boolean;\n  password: string;\n  errorMessage: string;\n  protected logger: any;\n\n  constructor(@Inject(AmplifyService) protected amplifyService: AmplifyService) {\n    this.logger = this.amplifyService.logger('RequireNewPasswordComponent');\n  }\n\n  @Input()\n  set authState(authState: AuthState) {\n    this._authState = authState;\n    this._show = authState.state === 'requireNewPassword';\n  }\n\n  @Input() hide: string[] = [];\n\n  @Input()\n  set data(data: any) {\n    this._authState = data.authState;\n    this._show = data.authState.state === 'requireNewPassword';\n    this.hide = data.hide ? data.hide : this.hide;\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.auth()){\n      throw new Error('Auth module not registered on AmplifyService provider');\n    }\n  }\n\n  shouldHide(comp) {\n    return this.hide.filter(item => item === comp)\n            .length > 0;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  onSubmit() {\n    const { user } = this._authState;\n    const { requiredAttributes } = user.challengeParam;\n    this.amplifyService.auth()\n      .completeNewPassword(\n        user,\n        this.password,\n        requiredAttributes\n      )\n      .then(() => {\n        this.onAlertClose();\n        this.amplifyService.setAuthState({ state: 'signIn', user });\n      })\n      .catch(err => this._setError(err));\n  }\n\n  onSignIn() {\n    this.onAlertClose();\n    this.amplifyService.setAuthState({ state: 'signIn', user: null });\n  }\n\n  onAlertClose() {\n    this._setError(null);\n  }\n\n  _setError(err) {\n    if (!err) {\n      this.errorMessage = null;\n      return;\n    }\n\n    this.errorMessage = err.message || err;\n  }\n}\n"]}